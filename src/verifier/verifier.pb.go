// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.0
// source: src/verifier/verifier.proto

package verifier

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SecretType int32

const (
	SecretType_RAW SecretType = 0
	SecretType_RSA SecretType = 1
	SecretType_AES SecretType = 2
)

// Enum value maps for SecretType.
var (
	SecretType_name = map[int32]string{
		0: "RAW",
		1: "RSA",
		2: "AES",
	}
	SecretType_value = map[string]int32{
		"RAW": 0,
		"RSA": 1,
		"AES": 2,
	}
)

func (x SecretType) Enum() *SecretType {
	p := new(SecretType)
	*p = x
	return p
}

func (x SecretType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretType) Descriptor() protoreflect.EnumDescriptor {
	return file_src_verifier_verifier_proto_enumTypes[0].Descriptor()
}

func (SecretType) Type() protoreflect.EnumType {
	return &file_src_verifier_verifier_proto_enumTypes[0]
}

func (x SecretType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretType.Descriptor instead.
func (SecretType) EnumDescriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{0}
}

type GetPlatformCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetPlatformCertRequest) Reset() {
	*x = GetPlatformCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformCertRequest) ProtoMessage() {}

func (x *GetPlatformCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformCertRequest.ProtoReflect.Descriptor instead.
func (*GetPlatformCertRequest) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{0}
}

func (x *GetPlatformCertRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetPlatformCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	PlatformCert []byte `protobuf:"bytes,2,opt,name=platformCert,proto3" json:"platformCert,omitempty"`
}

func (x *GetPlatformCertResponse) Reset() {
	*x = GetPlatformCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformCertResponse) ProtoMessage() {}

func (x *GetPlatformCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformCertResponse.ProtoReflect.Descriptor instead.
func (*GetPlatformCertResponse) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlatformCertResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetPlatformCertResponse) GetPlatformCert() []byte {
	if x != nil {
		return x.PlatformCert
	}
	return nil
}

type GetEKCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetEKCertRequest) Reset() {
	*x = GetEKCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEKCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEKCertRequest) ProtoMessage() {}

func (x *GetEKCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEKCertRequest.ProtoReflect.Descriptor instead.
func (*GetEKCertRequest) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{2}
}

func (x *GetEKCertRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetEKCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	EkCert []byte `protobuf:"bytes,2,opt,name=ekCert,proto3" json:"ekCert,omitempty"`
	EkPub  []byte `protobuf:"bytes,3,opt,name=ekPub,proto3" json:"ekPub,omitempty"`
}

func (x *GetEKCertResponse) Reset() {
	*x = GetEKCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEKCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEKCertResponse) ProtoMessage() {}

func (x *GetEKCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEKCertResponse.ProtoReflect.Descriptor instead.
func (*GetEKCertResponse) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{3}
}

func (x *GetEKCertResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetEKCertResponse) GetEkCert() []byte {
	if x != nil {
		return x.EkCert
	}
	return nil
}

func (x *GetEKCertResponse) GetEkPub() []byte {
	if x != nil {
		return x.EkPub
	}
	return nil
}

type GetAKRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetAKRequest) Reset() {
	*x = GetAKRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAKRequest) ProtoMessage() {}

func (x *GetAKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAKRequest.ProtoReflect.Descriptor instead.
func (*GetAKRequest) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{4}
}

func (x *GetAKRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetAKResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	EkPub  []byte `protobuf:"bytes,2,opt,name=ekPub,proto3" json:"ekPub,omitempty"`
	AkName []byte `protobuf:"bytes,3,opt,name=akName,proto3" json:"akName,omitempty"`
	AkPub  []byte `protobuf:"bytes,4,opt,name=akPub,proto3" json:"akPub,omitempty"`
}

func (x *GetAKResponse) Reset() {
	*x = GetAKResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAKResponse) ProtoMessage() {}

func (x *GetAKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAKResponse.ProtoReflect.Descriptor instead.
func (*GetAKResponse) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{5}
}

func (x *GetAKResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetAKResponse) GetEkPub() []byte {
	if x != nil {
		return x.EkPub
	}
	return nil
}

func (x *GetAKResponse) GetAkName() []byte {
	if x != nil {
		return x.AkName
	}
	return nil
}

func (x *GetAKResponse) GetAkPub() []byte {
	if x != nil {
		return x.AkPub
	}
	return nil
}

type ActivateCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CredBlob        []byte `protobuf:"bytes,2,opt,name=credBlob,proto3" json:"credBlob,omitempty"`
	EncryptedSecret []byte `protobuf:"bytes,3,opt,name=encryptedSecret,proto3" json:"encryptedSecret,omitempty"`
}

func (x *ActivateCredentialRequest) Reset() {
	*x = ActivateCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateCredentialRequest) ProtoMessage() {}

func (x *ActivateCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateCredentialRequest.ProtoReflect.Descriptor instead.
func (*ActivateCredentialRequest) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{6}
}

func (x *ActivateCredentialRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ActivateCredentialRequest) GetCredBlob() []byte {
	if x != nil {
		return x.CredBlob
	}
	return nil
}

func (x *ActivateCredentialRequest) GetEncryptedSecret() []byte {
	if x != nil {
		return x.EncryptedSecret
	}
	return nil
}

type ActivateCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Secret []byte `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *ActivateCredentialResponse) Reset() {
	*x = ActivateCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateCredentialResponse) ProtoMessage() {}

func (x *ActivateCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateCredentialResponse.ProtoReflect.Descriptor instead.
func (*ActivateCredentialResponse) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{7}
}

func (x *ActivateCredentialResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ActivateCredentialResponse) GetSecret() []byte {
	if x != nil {
		return x.Secret
	}
	return nil
}

type QuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string  `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Pcrs   []int32 `protobuf:"varint,2,rep,packed,name=pcrs,proto3" json:"pcrs,omitempty"`
	Secret string  `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *QuoteRequest) Reset() {
	*x = QuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteRequest) ProtoMessage() {}

func (x *QuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteRequest.ProtoReflect.Descriptor instead.
func (*QuoteRequest) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{8}
}

func (x *QuoteRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *QuoteRequest) GetPcrs() []int32 {
	if x != nil {
		return x.Pcrs
	}
	return nil
}

func (x *QuoteRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type QuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Attestation []byte `protobuf:"bytes,2,opt,name=attestation,proto3" json:"attestation,omitempty"`
	Signature   []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Eventlog    []byte `protobuf:"bytes,4,opt,name=eventlog,proto3" json:"eventlog,omitempty"`
}

func (x *QuoteResponse) Reset() {
	*x = QuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteResponse) ProtoMessage() {}

func (x *QuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteResponse.ProtoReflect.Descriptor instead.
func (*QuoteResponse) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{9}
}

func (x *QuoteResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *QuoteResponse) GetAttestation() []byte {
	if x != nil {
		return x.Attestation
	}
	return nil
}

func (x *QuoteResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *QuoteResponse) GetEventlog() []byte {
	if x != nil {
		return x.Eventlog
	}
	return nil
}

type AttestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Secret string `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *AttestRequest) Reset() {
	*x = AttestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestRequest) ProtoMessage() {}

func (x *AttestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestRequest.ProtoReflect.Descriptor instead.
func (*AttestRequest) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{10}
}

func (x *AttestRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AttestRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type AttestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Attestation []byte `protobuf:"bytes,2,opt,name=attestation,proto3" json:"attestation,omitempty"`
}

func (x *AttestResponse) Reset() {
	*x = AttestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestResponse) ProtoMessage() {}

func (x *AttestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestResponse.ProtoReflect.Descriptor instead.
func (*AttestResponse) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{11}
}

func (x *AttestResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AttestResponse) GetAttestation() []byte {
	if x != nil {
		return x.Attestation
	}
	return nil
}

type PushSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string     `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	SecretType SecretType `protobuf:"varint,2,opt,name=secret_type,json=secretType,proto3,enum=verifier.SecretType" json:"secret_type,omitempty"`
	ImportBlob []byte     `protobuf:"bytes,3,opt,name=importBlob,proto3" json:"importBlob,omitempty"`
}

func (x *PushSecretRequest) Reset() {
	*x = PushSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSecretRequest) ProtoMessage() {}

func (x *PushSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSecretRequest.ProtoReflect.Descriptor instead.
func (*PushSecretRequest) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{12}
}

func (x *PushSecretRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PushSecretRequest) GetSecretType() SecretType {
	if x != nil {
		return x.SecretType
	}
	return SecretType_RAW
}

func (x *PushSecretRequest) GetImportBlob() []byte {
	if x != nil {
		return x.ImportBlob
	}
	return nil
}

type PushSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Verification []byte `protobuf:"bytes,2,opt,name=verification,proto3" json:"verification,omitempty"`
}

func (x *PushSecretResponse) Reset() {
	*x = PushSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSecretResponse) ProtoMessage() {}

func (x *PushSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSecretResponse.ProtoReflect.Descriptor instead.
func (*PushSecretResponse) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{13}
}

func (x *PushSecretResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PushSecretResponse) GetVerification() []byte {
	if x != nil {
		return x.Verification
	}
	return nil
}

type PullRSAKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string  `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Pcrs []int32 `protobuf:"varint,2,rep,packed,name=pcrs,proto3" json:"pcrs,omitempty"`
}

func (x *PullRSAKeyRequest) Reset() {
	*x = PullRSAKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRSAKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRSAKeyRequest) ProtoMessage() {}

func (x *PullRSAKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRSAKeyRequest.ProtoReflect.Descriptor instead.
func (*PullRSAKeyRequest) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{14}
}

func (x *PullRSAKeyRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PullRSAKeyRequest) GetPcrs() []int32 {
	if x != nil {
		return x.Pcrs
	}
	return nil
}

type PullRSAKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	TpmPublicKey         []byte `protobuf:"bytes,2,opt,name=tpm_public_key,json=tpmPublicKey,proto3" json:"tpm_public_key,omitempty"`
	TestSignature        []byte `protobuf:"bytes,3,opt,name=test_signature,json=testSignature,proto3" json:"test_signature,omitempty"`
	AttestationSignature []byte `protobuf:"bytes,4,opt,name=attestation_signature,json=attestationSignature,proto3" json:"attestation_signature,omitempty"`
	Attestation          []byte `protobuf:"bytes,5,opt,name=attestation,proto3" json:"attestation,omitempty"`
}

func (x *PullRSAKeyResponse) Reset() {
	*x = PullRSAKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_verifier_verifier_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRSAKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRSAKeyResponse) ProtoMessage() {}

func (x *PullRSAKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_verifier_verifier_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRSAKeyResponse.ProtoReflect.Descriptor instead.
func (*PullRSAKeyResponse) Descriptor() ([]byte, []int) {
	return file_src_verifier_verifier_proto_rawDescGZIP(), []int{15}
}

func (x *PullRSAKeyResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PullRSAKeyResponse) GetTpmPublicKey() []byte {
	if x != nil {
		return x.TpmPublicKey
	}
	return nil
}

func (x *PullRSAKeyResponse) GetTestSignature() []byte {
	if x != nil {
		return x.TestSignature
	}
	return nil
}

func (x *PullRSAKeyResponse) GetAttestationSignature() []byte {
	if x != nil {
		return x.AttestationSignature
	}
	return nil
}

func (x *PullRSAKeyResponse) GetAttestation() []byte {
	if x != nil {
		return x.Attestation
	}
	return nil
}

var File_src_verifier_verifier_proto protoreflect.FileDescriptor

var file_src_verifier_verifier_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x72, 0x63, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x65, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x43, 0x65, 0x72, 0x74, 0x22, 0x24, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x4b, 0x43, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x45, 0x4b, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6b, 0x43, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x65, 0x6b, 0x43, 0x65, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6b, 0x50,
	0x75, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x6b, 0x50, 0x75, 0x62, 0x22,
	0x20, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0x65, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6b, 0x50, 0x75, 0x62, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x6b, 0x50, 0x75, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6b, 0x50, 0x75, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x61, 0x6b, 0x50, 0x75, 0x62, 0x22, 0x73, 0x0a, 0x19, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x64, 0x42,
	0x6c, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x72, 0x65, 0x64, 0x42,
	0x6c, 0x6f, 0x62, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x46, 0x0a,
	0x1a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x4c, 0x0a, 0x0c, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x63, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x70, 0x63, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x22, 0x7d, 0x0a, 0x0d, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x6c,
	0x6f, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x6c,
	0x6f, 0x67, 0x22, 0x39, 0x0a, 0x0d, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x44, 0x0a,
	0x0e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x7c, 0x0a, 0x11, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6c, 0x6f,
	0x62, 0x22, 0x4a, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a,
	0x11, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x53, 0x41, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x63, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x63, 0x72, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x12, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x53, 0x41, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x70, 0x6d, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x70, 0x6d, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x74, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x33,
	0x0a, 0x15, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x61,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x27, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x41, 0x57, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x52, 0x53, 0x41, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x45, 0x53, 0x10, 0x02, 0x32, 0xdc,
	0x04, 0x0a, 0x08, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x12, 0x20,
	0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x45, 0x4b, 0x43, 0x65,
	0x72, 0x74, 0x12, 0x1a, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x4b, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x4b, 0x43,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a,
	0x05, 0x47, 0x65, 0x74, 0x41, 0x4b, 0x12, 0x16, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x4b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x12, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12,
	0x23, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x05,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x06, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x41, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x53, 0x41, 0x4b, 0x65, 0x79,
	0x12, 0x1b, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x53, 0x41, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x53, 0x41,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3c, 0x5a,
	0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x6c, 0x72,
	0x61, 0x73, 0x68, 0x69, 0x64, 0x31, 0x32, 0x33, 0x2f, 0x67, 0x6f, 0x5f, 0x74, 0x70, 0x6d, 0x5f,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_src_verifier_verifier_proto_rawDescOnce sync.Once
	file_src_verifier_verifier_proto_rawDescData = file_src_verifier_verifier_proto_rawDesc
)

func file_src_verifier_verifier_proto_rawDescGZIP() []byte {
	file_src_verifier_verifier_proto_rawDescOnce.Do(func() {
		file_src_verifier_verifier_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_verifier_verifier_proto_rawDescData)
	})
	return file_src_verifier_verifier_proto_rawDescData
}

var file_src_verifier_verifier_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_src_verifier_verifier_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_src_verifier_verifier_proto_goTypes = []interface{}{
	(SecretType)(0),                    // 0: verifier.SecretType
	(*GetPlatformCertRequest)(nil),     // 1: verifier.GetPlatformCertRequest
	(*GetPlatformCertResponse)(nil),    // 2: verifier.GetPlatformCertResponse
	(*GetEKCertRequest)(nil),           // 3: verifier.GetEKCertRequest
	(*GetEKCertResponse)(nil),          // 4: verifier.GetEKCertResponse
	(*GetAKRequest)(nil),               // 5: verifier.GetAKRequest
	(*GetAKResponse)(nil),              // 6: verifier.GetAKResponse
	(*ActivateCredentialRequest)(nil),  // 7: verifier.ActivateCredentialRequest
	(*ActivateCredentialResponse)(nil), // 8: verifier.ActivateCredentialResponse
	(*QuoteRequest)(nil),               // 9: verifier.QuoteRequest
	(*QuoteResponse)(nil),              // 10: verifier.QuoteResponse
	(*AttestRequest)(nil),              // 11: verifier.AttestRequest
	(*AttestResponse)(nil),             // 12: verifier.AttestResponse
	(*PushSecretRequest)(nil),          // 13: verifier.PushSecretRequest
	(*PushSecretResponse)(nil),         // 14: verifier.PushSecretResponse
	(*PullRSAKeyRequest)(nil),          // 15: verifier.PullRSAKeyRequest
	(*PullRSAKeyResponse)(nil),         // 16: verifier.PullRSAKeyResponse
}
var file_src_verifier_verifier_proto_depIdxs = []int32{
	0,  // 0: verifier.PushSecretRequest.secret_type:type_name -> verifier.SecretType
	1,  // 1: verifier.Verifier.GetPlatformCert:input_type -> verifier.GetPlatformCertRequest
	3,  // 2: verifier.Verifier.GetEKCert:input_type -> verifier.GetEKCertRequest
	5,  // 3: verifier.Verifier.GetAK:input_type -> verifier.GetAKRequest
	7,  // 4: verifier.Verifier.ActivateCredential:input_type -> verifier.ActivateCredentialRequest
	9,  // 5: verifier.Verifier.Quote:input_type -> verifier.QuoteRequest
	11, // 6: verifier.Verifier.Attest:input_type -> verifier.AttestRequest
	13, // 7: verifier.Verifier.PushSecret:input_type -> verifier.PushSecretRequest
	15, // 8: verifier.Verifier.PullRSAKey:input_type -> verifier.PullRSAKeyRequest
	2,  // 9: verifier.Verifier.GetPlatformCert:output_type -> verifier.GetPlatformCertResponse
	4,  // 10: verifier.Verifier.GetEKCert:output_type -> verifier.GetEKCertResponse
	6,  // 11: verifier.Verifier.GetAK:output_type -> verifier.GetAKResponse
	8,  // 12: verifier.Verifier.ActivateCredential:output_type -> verifier.ActivateCredentialResponse
	10, // 13: verifier.Verifier.Quote:output_type -> verifier.QuoteResponse
	12, // 14: verifier.Verifier.Attest:output_type -> verifier.AttestResponse
	14, // 15: verifier.Verifier.PushSecret:output_type -> verifier.PushSecretResponse
	16, // 16: verifier.Verifier.PullRSAKey:output_type -> verifier.PullRSAKeyResponse
	9,  // [9:17] is the sub-list for method output_type
	1,  // [1:9] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_src_verifier_verifier_proto_init() }
func file_src_verifier_verifier_proto_init() {
	if File_src_verifier_verifier_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_verifier_verifier_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEKCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEKCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAKRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAKResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullRSAKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_verifier_verifier_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullRSAKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_verifier_verifier_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_verifier_verifier_proto_goTypes,
		DependencyIndexes: file_src_verifier_verifier_proto_depIdxs,
		EnumInfos:         file_src_verifier_verifier_proto_enumTypes,
		MessageInfos:      file_src_verifier_verifier_proto_msgTypes,
	}.Build()
	File_src_verifier_verifier_proto = out.File
	file_src_verifier_verifier_proto_rawDesc = nil
	file_src_verifier_verifier_proto_goTypes = nil
	file_src_verifier_verifier_proto_depIdxs = nil
}
