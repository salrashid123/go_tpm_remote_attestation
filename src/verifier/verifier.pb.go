// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.13.0
// source: verifier/verifier.proto

package verifier

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SecretType int32

const (
	SecretType_RAW SecretType = 0
	SecretType_RSA SecretType = 1
	SecretType_AES SecretType = 2
)

// Enum value maps for SecretType.
var (
	SecretType_name = map[int32]string{
		0: "RAW",
		1: "RSA",
		2: "AES",
	}
	SecretType_value = map[string]int32{
		"RAW": 0,
		"RSA": 1,
		"AES": 2,
	}
)

func (x SecretType) Enum() *SecretType {
	p := new(SecretType)
	*p = x
	return p
}

func (x SecretType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretType) Descriptor() protoreflect.EnumDescriptor {
	return file_verifier_verifier_proto_enumTypes[0].Descriptor()
}

func (SecretType) Type() protoreflect.EnumType {
	return &file_verifier_verifier_proto_enumTypes[0]
}

func (x SecretType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretType.Descriptor instead.
func (SecretType) EnumDescriptor() ([]byte, []int) {
	return file_verifier_verifier_proto_rawDescGZIP(), []int{0}
}

type MakeCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	AkName    string `protobuf:"bytes,2,opt,name=akName,proto3" json:"akName,omitempty"`
	EkPub     []byte `protobuf:"bytes,3,opt,name=ekPub,proto3" json:"ekPub,omitempty"` //   TPMT_PUBLIC  use tpm2.DecodePublic, tpm2.LoadExternal..TODO, just send RSAPublicKey
	EkCert    []byte `protobuf:"bytes,4,opt,name=ekCert,proto3" json:"ekCert,omitempty"`
	AkPub     []byte `protobuf:"bytes,5,opt,name=akPub,proto3" json:"akPub,omitempty"`
	AkPubCert []byte `protobuf:"bytes,6,opt,name=akPubCert,proto3" json:"akPubCert,omitempty"`
}

func (x *MakeCredentialRequest) Reset() {
	*x = MakeCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verifier_verifier_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeCredentialRequest) ProtoMessage() {}

func (x *MakeCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_verifier_verifier_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeCredentialRequest.ProtoReflect.Descriptor instead.
func (*MakeCredentialRequest) Descriptor() ([]byte, []int) {
	return file_verifier_verifier_proto_rawDescGZIP(), []int{0}
}

func (x *MakeCredentialRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *MakeCredentialRequest) GetAkName() string {
	if x != nil {
		return x.AkName
	}
	return ""
}

func (x *MakeCredentialRequest) GetEkPub() []byte {
	if x != nil {
		return x.EkPub
	}
	return nil
}

func (x *MakeCredentialRequest) GetEkCert() []byte {
	if x != nil {
		return x.EkCert
	}
	return nil
}

func (x *MakeCredentialRequest) GetAkPub() []byte {
	if x != nil {
		return x.AkPub
	}
	return nil
}

func (x *MakeCredentialRequest) GetAkPubCert() []byte {
	if x != nil {
		return x.AkPubCert
	}
	return nil
}

type MakeCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CredBlob        []byte `protobuf:"bytes,2,opt,name=credBlob,proto3" json:"credBlob,omitempty"`
	EncryptedSecret []byte `protobuf:"bytes,3,opt,name=encryptedSecret,proto3" json:"encryptedSecret,omitempty"`
}

func (x *MakeCredentialResponse) Reset() {
	*x = MakeCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verifier_verifier_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeCredentialResponse) ProtoMessage() {}

func (x *MakeCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_verifier_verifier_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeCredentialResponse.ProtoReflect.Descriptor instead.
func (*MakeCredentialResponse) Descriptor() ([]byte, []int) {
	return file_verifier_verifier_proto_rawDescGZIP(), []int{1}
}

func (x *MakeCredentialResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *MakeCredentialResponse) GetCredBlob() []byte {
	if x != nil {
		return x.CredBlob
	}
	return nil
}

func (x *MakeCredentialResponse) GetEncryptedSecret() []byte {
	if x != nil {
		return x.EncryptedSecret
	}
	return nil
}

type ActivateCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *ActivateCredentialRequest) Reset() {
	*x = ActivateCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verifier_verifier_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateCredentialRequest) ProtoMessage() {}

func (x *ActivateCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_verifier_verifier_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateCredentialRequest.ProtoReflect.Descriptor instead.
func (*ActivateCredentialRequest) Descriptor() ([]byte, []int) {
	return file_verifier_verifier_proto_rawDescGZIP(), []int{2}
}

func (x *ActivateCredentialRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ActivateCredentialRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type ActivateCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *ActivateCredentialResponse) Reset() {
	*x = ActivateCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verifier_verifier_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateCredentialResponse) ProtoMessage() {}

func (x *ActivateCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_verifier_verifier_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateCredentialResponse.ProtoReflect.Descriptor instead.
func (*ActivateCredentialResponse) Descriptor() ([]byte, []int) {
	return file_verifier_verifier_proto_rawDescGZIP(), []int{3}
}

func (x *ActivateCredentialResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ActivateCredentialResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type OfferQuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *OfferQuoteRequest) Reset() {
	*x = OfferQuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verifier_verifier_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferQuoteRequest) ProtoMessage() {}

func (x *OfferQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_verifier_verifier_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferQuoteRequest.ProtoReflect.Descriptor instead.
func (*OfferQuoteRequest) Descriptor() ([]byte, []int) {
	return file_verifier_verifier_proto_rawDescGZIP(), []int{4}
}

func (x *OfferQuoteRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type OfferQuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Pcr   int32  `protobuf:"varint,2,opt,name=pcr,proto3" json:"pcr,omitempty"`
	Nonce string `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *OfferQuoteResponse) Reset() {
	*x = OfferQuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verifier_verifier_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferQuoteResponse) ProtoMessage() {}

func (x *OfferQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_verifier_verifier_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferQuoteResponse.ProtoReflect.Descriptor instead.
func (*OfferQuoteResponse) Descriptor() ([]byte, []int) {
	return file_verifier_verifier_proto_rawDescGZIP(), []int{5}
}

func (x *OfferQuoteResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *OfferQuoteResponse) GetPcr() int32 {
	if x != nil {
		return x.Pcr
	}
	return 0
}

func (x *OfferQuoteResponse) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type ProvideQuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Attestation []byte `protobuf:"bytes,3,opt,name=attestation,proto3" json:"attestation,omitempty"`
	Signature   []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ProvideQuoteRequest) Reset() {
	*x = ProvideQuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verifier_verifier_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvideQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvideQuoteRequest) ProtoMessage() {}

func (x *ProvideQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_verifier_verifier_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvideQuoteRequest.ProtoReflect.Descriptor instead.
func (*ProvideQuoteRequest) Descriptor() ([]byte, []int) {
	return file_verifier_verifier_proto_rawDescGZIP(), []int{6}
}

func (x *ProvideQuoteRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ProvideQuoteRequest) GetAttestation() []byte {
	if x != nil {
		return x.Attestation
	}
	return nil
}

func (x *ProvideQuoteRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ProvideQuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *ProvideQuoteResponse) Reset() {
	*x = ProvideQuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verifier_verifier_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvideQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvideQuoteResponse) ProtoMessage() {}

func (x *ProvideQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_verifier_verifier_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvideQuoteResponse.ProtoReflect.Descriptor instead.
func (*ProvideQuoteResponse) Descriptor() ([]byte, []int) {
	return file_verifier_verifier_proto_rawDescGZIP(), []int{7}
}

func (x *ProvideQuoteResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ProvideQuoteResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type OfferImportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *OfferImportRequest) Reset() {
	*x = OfferImportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verifier_verifier_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferImportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferImportRequest) ProtoMessage() {}

func (x *OfferImportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_verifier_verifier_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferImportRequest.ProtoReflect.Descriptor instead.
func (*OfferImportRequest) Descriptor() ([]byte, []int) {
	return file_verifier_verifier_proto_rawDescGZIP(), []int{8}
}

func (x *OfferImportRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type OfferImportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string     `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	SecretType SecretType `protobuf:"varint,2,opt,name=secret_type,json=secretType,proto3,enum=verifier.SecretType" json:"secret_type,omitempty"`
	ImportBlob []byte     `protobuf:"bytes,3,opt,name=importBlob,proto3" json:"importBlob,omitempty"`
}

func (x *OfferImportResponse) Reset() {
	*x = OfferImportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verifier_verifier_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferImportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferImportResponse) ProtoMessage() {}

func (x *OfferImportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_verifier_verifier_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferImportResponse.ProtoReflect.Descriptor instead.
func (*OfferImportResponse) Descriptor() ([]byte, []int) {
	return file_verifier_verifier_proto_rawDescGZIP(), []int{9}
}

func (x *OfferImportResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *OfferImportResponse) GetSecretType() SecretType {
	if x != nil {
		return x.SecretType
	}
	return SecretType_RAW
}

func (x *OfferImportResponse) GetImportBlob() []byte {
	if x != nil {
		return x.ImportBlob
	}
	return nil
}

var File_verifier_verifier_proto protoreflect.FileDescriptor

var file_verifier_verifier_proto_rawDesc = []byte{
	0x0a, 0x17, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x22, 0xa3, 0x01, 0x0a, 0x15, 0x4d, 0x61, 0x6b, 0x65, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6b, 0x50, 0x75, 0x62,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x6b, 0x50, 0x75, 0x62, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x6b, 0x43, 0x65, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65,
	0x6b, 0x43, 0x65, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6b, 0x50, 0x75, 0x62, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x6b, 0x50, 0x75, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x6b, 0x50, 0x75, 0x62, 0x43, 0x65, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x61, 0x6b, 0x50, 0x75, 0x62, 0x43, 0x65, 0x72, 0x74, 0x22, 0x70, 0x0a, 0x16, 0x4d, 0x61, 0x6b,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x62, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x45, 0x0a, 0x19, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x22, 0x4a, 0x0a, 0x1a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x25,
	0x0a, 0x11, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x12, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x51, 0x75,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x63, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x63, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x67, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x44,
	0x0a, 0x14, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x22, 0x26, 0x0a, 0x12, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x7e, 0x0a, 0x13,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x2a, 0x27, 0x0a, 0x0a,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x41,
	0x57, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x53, 0x41, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x45, 0x53, 0x10, 0x02, 0x32, 0xae, 0x03, 0x0a, 0x08, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x55, 0x0a, 0x0e, 0x4d, 0x61, 0x6b, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x12, 0x1f, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x4d, 0x61, 0x6b, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x12, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12,
	0x23, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x6c, 0x72, 0x61, 0x73, 0x68, 0x69, 0x64, 0x31, 0x32,
	0x33, 0x2f, 0x72, 0x75, 0x6e, 0x67, 0x6f, 0x5f, 0x74, 0x70, 0x6d, 0x5f, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_verifier_verifier_proto_rawDescOnce sync.Once
	file_verifier_verifier_proto_rawDescData = file_verifier_verifier_proto_rawDesc
)

func file_verifier_verifier_proto_rawDescGZIP() []byte {
	file_verifier_verifier_proto_rawDescOnce.Do(func() {
		file_verifier_verifier_proto_rawDescData = protoimpl.X.CompressGZIP(file_verifier_verifier_proto_rawDescData)
	})
	return file_verifier_verifier_proto_rawDescData
}

var file_verifier_verifier_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_verifier_verifier_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_verifier_verifier_proto_goTypes = []interface{}{
	(SecretType)(0),                    // 0: verifier.SecretType
	(*MakeCredentialRequest)(nil),      // 1: verifier.MakeCredentialRequest
	(*MakeCredentialResponse)(nil),     // 2: verifier.MakeCredentialResponse
	(*ActivateCredentialRequest)(nil),  // 3: verifier.ActivateCredentialRequest
	(*ActivateCredentialResponse)(nil), // 4: verifier.ActivateCredentialResponse
	(*OfferQuoteRequest)(nil),          // 5: verifier.OfferQuoteRequest
	(*OfferQuoteResponse)(nil),         // 6: verifier.OfferQuoteResponse
	(*ProvideQuoteRequest)(nil),        // 7: verifier.ProvideQuoteRequest
	(*ProvideQuoteResponse)(nil),       // 8: verifier.ProvideQuoteResponse
	(*OfferImportRequest)(nil),         // 9: verifier.OfferImportRequest
	(*OfferImportResponse)(nil),        // 10: verifier.OfferImportResponse
}
var file_verifier_verifier_proto_depIdxs = []int32{
	0,  // 0: verifier.OfferImportResponse.secret_type:type_name -> verifier.SecretType
	1,  // 1: verifier.Verifier.MakeCredential:input_type -> verifier.MakeCredentialRequest
	3,  // 2: verifier.Verifier.ActivateCredential:input_type -> verifier.ActivateCredentialRequest
	5,  // 3: verifier.Verifier.OfferQuote:input_type -> verifier.OfferQuoteRequest
	7,  // 4: verifier.Verifier.ProvideQuote:input_type -> verifier.ProvideQuoteRequest
	9,  // 5: verifier.Verifier.OfferImport:input_type -> verifier.OfferImportRequest
	2,  // 6: verifier.Verifier.MakeCredential:output_type -> verifier.MakeCredentialResponse
	4,  // 7: verifier.Verifier.ActivateCredential:output_type -> verifier.ActivateCredentialResponse
	6,  // 8: verifier.Verifier.OfferQuote:output_type -> verifier.OfferQuoteResponse
	8,  // 9: verifier.Verifier.ProvideQuote:output_type -> verifier.ProvideQuoteResponse
	10, // 10: verifier.Verifier.OfferImport:output_type -> verifier.OfferImportResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_verifier_verifier_proto_init() }
func file_verifier_verifier_proto_init() {
	if File_verifier_verifier_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_verifier_verifier_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verifier_verifier_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verifier_verifier_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verifier_verifier_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verifier_verifier_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferQuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verifier_verifier_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferQuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verifier_verifier_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvideQuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verifier_verifier_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvideQuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verifier_verifier_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferImportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verifier_verifier_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferImportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_verifier_verifier_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_verifier_verifier_proto_goTypes,
		DependencyIndexes: file_verifier_verifier_proto_depIdxs,
		EnumInfos:         file_verifier_verifier_proto_enumTypes,
		MessageInfos:      file_verifier_verifier_proto_msgTypes,
	}.Build()
	File_verifier_verifier_proto = out.File
	file_verifier_verifier_proto_rawDesc = nil
	file_verifier_verifier_proto_goTypes = nil
	file_verifier_verifier_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VerifierClient is the client API for Verifier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VerifierClient interface {
	MakeCredential(ctx context.Context, in *MakeCredentialRequest, opts ...grpc.CallOption) (*MakeCredentialResponse, error)
	ActivateCredential(ctx context.Context, in *ActivateCredentialRequest, opts ...grpc.CallOption) (*ActivateCredentialResponse, error)
	OfferQuote(ctx context.Context, in *OfferQuoteRequest, opts ...grpc.CallOption) (*OfferQuoteResponse, error)
	ProvideQuote(ctx context.Context, in *ProvideQuoteRequest, opts ...grpc.CallOption) (*ProvideQuoteResponse, error)
	OfferImport(ctx context.Context, in *OfferImportRequest, opts ...grpc.CallOption) (*OfferImportResponse, error)
}

type verifierClient struct {
	cc grpc.ClientConnInterface
}

func NewVerifierClient(cc grpc.ClientConnInterface) VerifierClient {
	return &verifierClient{cc}
}

func (c *verifierClient) MakeCredential(ctx context.Context, in *MakeCredentialRequest, opts ...grpc.CallOption) (*MakeCredentialResponse, error) {
	out := new(MakeCredentialResponse)
	err := c.cc.Invoke(ctx, "/verifier.Verifier/MakeCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *verifierClient) ActivateCredential(ctx context.Context, in *ActivateCredentialRequest, opts ...grpc.CallOption) (*ActivateCredentialResponse, error) {
	out := new(ActivateCredentialResponse)
	err := c.cc.Invoke(ctx, "/verifier.Verifier/ActivateCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *verifierClient) OfferQuote(ctx context.Context, in *OfferQuoteRequest, opts ...grpc.CallOption) (*OfferQuoteResponse, error) {
	out := new(OfferQuoteResponse)
	err := c.cc.Invoke(ctx, "/verifier.Verifier/OfferQuote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *verifierClient) ProvideQuote(ctx context.Context, in *ProvideQuoteRequest, opts ...grpc.CallOption) (*ProvideQuoteResponse, error) {
	out := new(ProvideQuoteResponse)
	err := c.cc.Invoke(ctx, "/verifier.Verifier/ProvideQuote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *verifierClient) OfferImport(ctx context.Context, in *OfferImportRequest, opts ...grpc.CallOption) (*OfferImportResponse, error) {
	out := new(OfferImportResponse)
	err := c.cc.Invoke(ctx, "/verifier.Verifier/OfferImport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VerifierServer is the server API for Verifier service.
type VerifierServer interface {
	MakeCredential(context.Context, *MakeCredentialRequest) (*MakeCredentialResponse, error)
	ActivateCredential(context.Context, *ActivateCredentialRequest) (*ActivateCredentialResponse, error)
	OfferQuote(context.Context, *OfferQuoteRequest) (*OfferQuoteResponse, error)
	ProvideQuote(context.Context, *ProvideQuoteRequest) (*ProvideQuoteResponse, error)
	OfferImport(context.Context, *OfferImportRequest) (*OfferImportResponse, error)
}

// UnimplementedVerifierServer can be embedded to have forward compatible implementations.
type UnimplementedVerifierServer struct {
}

func (*UnimplementedVerifierServer) MakeCredential(context.Context, *MakeCredentialRequest) (*MakeCredentialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeCredential not implemented")
}
func (*UnimplementedVerifierServer) ActivateCredential(context.Context, *ActivateCredentialRequest) (*ActivateCredentialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateCredential not implemented")
}
func (*UnimplementedVerifierServer) OfferQuote(context.Context, *OfferQuoteRequest) (*OfferQuoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OfferQuote not implemented")
}
func (*UnimplementedVerifierServer) ProvideQuote(context.Context, *ProvideQuoteRequest) (*ProvideQuoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProvideQuote not implemented")
}
func (*UnimplementedVerifierServer) OfferImport(context.Context, *OfferImportRequest) (*OfferImportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OfferImport not implemented")
}

func RegisterVerifierServer(s *grpc.Server, srv VerifierServer) {
	s.RegisterService(&_Verifier_serviceDesc, srv)
}

func _Verifier_MakeCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeCredentialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VerifierServer).MakeCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/verifier.Verifier/MakeCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VerifierServer).MakeCredential(ctx, req.(*MakeCredentialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Verifier_ActivateCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateCredentialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VerifierServer).ActivateCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/verifier.Verifier/ActivateCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VerifierServer).ActivateCredential(ctx, req.(*ActivateCredentialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Verifier_OfferQuote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfferQuoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VerifierServer).OfferQuote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/verifier.Verifier/OfferQuote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VerifierServer).OfferQuote(ctx, req.(*OfferQuoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Verifier_ProvideQuote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProvideQuoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VerifierServer).ProvideQuote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/verifier.Verifier/ProvideQuote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VerifierServer).ProvideQuote(ctx, req.(*ProvideQuoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Verifier_OfferImport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfferImportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VerifierServer).OfferImport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/verifier.Verifier/OfferImport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VerifierServer).OfferImport(ctx, req.(*OfferImportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Verifier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "verifier.Verifier",
	HandlerType: (*VerifierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MakeCredential",
			Handler:    _Verifier_MakeCredential_Handler,
		},
		{
			MethodName: "ActivateCredential",
			Handler:    _Verifier_ActivateCredential_Handler,
		},
		{
			MethodName: "OfferQuote",
			Handler:    _Verifier_OfferQuote_Handler,
		},
		{
			MethodName: "ProvideQuote",
			Handler:    _Verifier_ProvideQuote_Handler,
		},
		{
			MethodName: "OfferImport",
			Handler:    _Verifier_OfferImport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "verifier/verifier.proto",
}
