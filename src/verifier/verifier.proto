syntax = "proto3";

package verifier;

option go_package = "github.com/salrashid123/rungo_tpm_remote_attestation/verifier";

service Verifier {
  rpc MakeCredential (MakeCredentialRequest) returns (MakeCredentialResponse) { }
  rpc ActivateCredential (ActivateCredentialRequest) returns (ActivateCredentialResponse) { }
  rpc OfferQuote (OfferQuoteRequest) returns (OfferQuoteResponse) { }
  rpc ProvideQuote (ProvideQuoteRequest) returns (ProvideQuoteResponse) { }
  rpc OfferImport (OfferImportRequest) returns (OfferImportResponse) { }
}

enum SecretType {
  RAW = 0;
  RSA = 1;
  AES = 2;
}  

message MakeCredentialRequest {
  string uid = 1;
  string akName = 2;  
  bytes ekPub = 3; //   TPMT_PUBLIC  use tpm2.DecodePublic, tpm2.LoadExternal..TODO, just send RSAPublicKey
  bytes ekCert = 4;
  bytes akPub = 5;
  bytes akPubCert = 6;
}

message MakeCredentialResponse {
  string uid = 1;
  bytes credBlob = 2;
  bytes encryptedSecret = 3;
}

message ActivateCredentialRequest {
  string uid = 1;
  string secret = 2;
}

message ActivateCredentialResponse {
  string uid = 1;
  bool verified = 2;
}

message OfferQuoteRequest {
  string uid = 1;
}

message OfferQuoteResponse {
  string uid = 1;
  int32 pcr = 2;
  string nonce = 3;
}

message ProvideQuoteRequest {
  string uid = 1;
  bytes attestation = 3;
  bytes signature = 4;    
}

message ProvideQuoteResponse {
  string uid = 1;
  bool verified = 2;
}

message OfferImportRequest {
  string uid = 1;
}

message OfferImportResponse {
  string uid = 1;
  SecretType secret_type = 2;
  bytes importBlob = 3;
}

